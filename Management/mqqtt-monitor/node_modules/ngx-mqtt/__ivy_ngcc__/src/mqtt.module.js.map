{"version":3,"file":"mqtt.module.js","sources":["mqtt.module.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAkCqB;;;;;gDAGF","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule, InjectionToken } from '@angular/core';\nexport var MQTT_SERVICE_OPTIONS = {\n    connectOnCreate: true,\n    hostname: 'localhost',\n    port: 1884,\n    path: ''\n};\nexport var MqttServiceConfig = new InjectionToken('NgxMqttServiceConfig');\nexport var MqttClientService = new InjectionToken('NgxMqttClientService');\nvar MqttModule = /** @class */ (function () {\n    function MqttModule() {\n    }\n    MqttModule_1 = MqttModule;\n    MqttModule.forRoot = function (config, client) {\n        return {\n            ngModule: MqttModule_1,\n            providers: [\n                {\n                    provide: MqttServiceConfig,\n                    useValue: config\n                },\n                {\n                    provide: MqttClientService,\n                    useValue: client\n                }\n            ]\n        };\n    };\n    var MqttModule_1;\n    MqttModule = MqttModule_1 = __decorate([\n        NgModule()\n    ], MqttModule);\n    return MqttModule;\n}());\nexport { MqttModule };\n"]}